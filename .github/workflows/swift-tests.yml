name: Swift Tests

on:
  pull_request:
    branches:
    - main
    paths:
    - '.github/workflows/swift-tests.yml'
    - '.swiftlint.yml'
    - 'macos/**/*.swift'
  push:
    branches:
    - main
    paths:
    - '.github/workflows/swift-tests.yml'
    - '.swiftlint.yml'
    - 'macos/**/*.swift'
  workflow_dispatch:

permissions:
  actions: read
  contents: read

jobs:
  lint:
    name: SwiftLint
    runs-on: macos-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Install SwiftLint
      run: brew install swiftlint
    - name: Run SwiftLint
      continue-on-error: false
      run: swiftlint lint --strict --reporter github-actions-logging

  test:
    name: Test Swift Code
    runs-on: macos-latest
    strategy:
      matrix:
        xcode:
        - '15.2'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Select Xcode version
      run: sudo xcode-select -s /Applications/Xcode_${{ matrix.xcode }}.app/Contents/Developer
    - name: Show Xcode version
      run: xcodebuild -version
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: x86_64-apple-darwin
    - name: Cache Cargo dependencies
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        path: |
          rust-core/target/
          ~/.cargo/bin/
          ~/.cargo/git/db/
          ~/.cargo/registry/cache/
          ~/.cargo/registry/index/
        restore-keys: |
          ${{ runner.os }}-cargo-
    - name: Build Rust core
      run: |
        cd rust-core
        cargo build
    - name: Check if test target exists
      id: check_tests
      run: |
        if xcodebuild -list -project macos/LindosTrayApp/LindosTrayApp.xcodeproj 2>&1 | grep -q "LindosTrayAppTests"; then
          echo "tests_exist=true" >> $GITHUB_OUTPUT
        else
          echo "tests_exist=false" >> $GITHUB_OUTPUT
        fi
    - name: Install dependencies
      if: steps.check_tests.outputs.tests_exist == 'true'
      run: |
        gem install xcpretty
    - name: Run tests
      continue-on-error: false
      if: steps.check_tests.outputs.tests_exist == 'true'
      run: |
        set -o pipefail
        xcodebuild test \
          -project macos/LindosTrayApp/LindosTrayApp.xcodeproj \
          -scheme LindosTrayApp \
          -destination 'platform=macOS' \
          -enableCodeCoverage YES \
          2>&1 | xcpretty --test --color
    - name: Test target not configured
      if: steps.check_tests.outputs.tests_exist == 'false'
      run: |
        echo "::warning::Test target not yet configured in Xcode project"
        echo "The test files are ready but need to be added to the Xcode project."
        echo "See macos/XCODE_TEST_SETUP.md for setup instructions."
        echo "This is expected for initial setup and can be ignored."
    - name: Upload test results
      if: always() && steps.check_tests.outputs.tests_exist == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: test-results-xcode-${{ matrix.xcode }}
        path: ~/Library/Developer/Xcode/DerivedData/*/Logs/Test/*.xcresult
        retention-days: 7

  build:
    name: Build macOS App
    needs:
    - lint
    runs-on: macos-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Select Xcode version
      run: sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: x86_64-apple-darwin
    - name: Cache Cargo dependencies
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        path: |
          rust-core/target/
          ~/.cargo/bin/
          ~/.cargo/git/db/
          ~/.cargo/registry/cache/
          ~/.cargo/registry/index/
        restore-keys: |
          ${{ runner.os }}-cargo-
    - name: Build macOS app
      run: ./scripts/build_macos.sh debug
    - name: Verify build artifacts
      run: |
        ls -la build/Debug/
        file build/Debug/LindosTrayApp.app/Contents/MacOS/LindosTrayApp
